#!/bin/bash

# Цвета для вывода
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
ORANGE='\033[0;33m' # Оранжевый (используется жёлтый как замена)
NC='\033[0m'

# Функции для логирования
log() {
    echo -e "${CYAN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}
success() {
    echo -e "${ORANGE}Команда успешно выполнилась, спасибо дорогой \"КЕКМА ПРОЕКТ_2025\"${NC}"
}
error() {
    echo -e "${RED}[ERROR] $1${NC}"
}
warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}
info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}
prompt() {
    echo -e "${YELLOW}[INPUT] $1${NC}"
}

# Проверка прав root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "Этот скрипт должен быть запущен с правами root"
        exit 1
    fi
}

# Главное меню
main_menu() {
    while true; do
        echo ""
        info "Главное меню:"
        echo "1) Настройка статического IP"
        echo "2) Изменение имени хоста"
        echo "3) Создание пользователя"
        echo "4) SSH подключение"
        echo "5) Сброс настроек"
        echo "6) Выход"
        prompt "Выберите действие (1-6): "
        read -r choice

        case $choice in
            1) configure_static_ip ;;
            2) change_hostname ;;
            3) create_user ;;
            4) ssh_connection ;;
            5) reset_settings ;;
            6) break ;;
            *) warn "Неверный выбор. Введите число от 1 до 6." ;;
        esac
    done
}

# Настройка статического IP
configure_static_ip() {
    log "Настройка статического IP..."
    # Здесь можно добавить вашу текущую логику настройки IP
    success
}

# Изменение имени хоста
change_hostname() {
    local hostnames=("isp.au-team.irpo" "hq-rtr.au-team.irpo" "br-rtr.au-team.irpo" "hq-srv.au-team.irpo" "hq-cli.au-team.irpo" "br-srv.au-team.irpo")
    echo ""
    info "Доступные варианты имени хоста:"
    for i in "${!hostnames[@]}"; do
        echo "  $((i+1))) ${hostnames[$i]}"
    done
    echo "  $((${#hostnames[@]}+1))) Ввести своё имя"

    while true; do
        prompt "Выберите вариант (1-$(( ${#hostnames[@]}+1 ))): "
        read -r choice
        if [[ "$choice" =~ ^[0-9]+$ ]] && [[ "$choice" -ge 1 ]] && [[ "$choice" -le $((${#hostnames[@]}+1)) ]]; then
            if [[ "$choice" -le ${#hostnames[@]} ]]; then
                new_hostname=${hostnames[$((choice-1))]}
            else
                read -p "Введите новое имя хоста: " new_hostname
            fi
            break
        else
            error "Неверный выбор. Введите число от 1 до $((${#hostnames[@]}+1))"
        fi
    done

    log "Установка нового имени хоста: $new_hostname"
    hostnamectl set-hostname "$new_hostname"
    exec bash
    log "Имя хоста изменено!"
    success
}

# Создание пользователя
create_user() {
    prompt "Введите имя нового пользователя (например, net_admin): "
    read -r username
    if id "$username" &>/dev/null; then
        warn "Пользователь '$username' уже существует."
    else
        log "Создание пользователя '$username'..."
        useradd -m -s /bin/bash "$username"
        passwd "$username"
        log "Пользователь '$username' успешно создан!"
    fi
    success
}

# SSH подключение
ssh_connection() {
    prompt "Введите имя пользователя для SSH: "
    read -r ssh_user
    prompt "Введите IP адрес для SSH: "
    read -r ssh_ip
    if validate_ip "$ssh_ip"; then
        log "Подключение к $ssh_user@$ssh_ip через SSH..."
        ssh "$ssh_user@$ssh_ip"
    else
        error "Неверный формат IP адреса."
    fi
}

# Сброс настроек
reset_settings() {
    echo ""
    info "Сброс настроек:"
    echo "1) Сброс сетевых настроек"
    echo "2) Сброс имени хоста"
    echo "3) Удаление пользователей"
    echo "4) Вернуться в главное меню"
    prompt "Выберите действие (1-4): "
    read -r choice

    case $choice in
        1) reset_network ;;
        2) reset_hostname ;;
        3) remove_users ;;
        4) return ;;
        *) warn "Неверный выбор. Возвращаемся в главное меню." ;;
    esac
}

# Сброс сетевых настроек
reset_network() {
    log "Сброс сетевых настроек..."
    # Добавьте логику для сброса сетевых настроек
    success
}

# Сброс имени хоста
reset_hostname() {
    log "Сброс имени хоста..."
    hostnamectl set-hostname "localhost"
    exec bash
    log "Имя хоста сброшено на 'localhost'."
    success
}

# Удаление пользователей
remove_users() {
    prompt "Введите имя пользователя для удаления: "
    read -r username
    if id "$username" &>/dev/null; then
        log "Удаление пользователя '$username'..."
        userdel -r "$username"
        log "Пользователь '$username' успешно удален!"
    else
        warn "Пользователь '$username' не существует."
    fi
    success
}

# Валидация IP адреса
validate_ip() {
    local ip=$1
    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        IFS='.' read -ra ADDR <<< "$ip"
        for i in "${ADDR[@]}"; do
            if [[ $i -lt 0 ]] || [[ $i -gt 255 ]]; then
                return 1
            fi
        done
        return 0
    fi
    return 1
}

# Запуск скрипта
check_root
main_menu
