#!/bin/bash

# Цвета для вывода
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m' # Яркий цвет для главного меню
NC='\033[0m'

# Функции для логирования
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}
error() {
    echo -e "${RED}[ERROR] $1${NC}"
}
warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}
info() {
    echo -e "${MAGENTA}[INFO] $1${NC}" # Изменён цвет на яркий
}
prompt() {
    echo -e "${CYAN}[INPUT] $1${NC}"
}

# Проверка прав root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "Этот скрипт должен быть запущен с правами root"
        exit 1
    fi
}

# Установка dialog, если не установлена
install_dialog() {
    if ! command -v dialog &>/dev/null; then
        log "Установка dialog..."
        if [[ -f /etc/os-release ]]; then
            . /etc/os-release
            case "$ID" in
                ubuntu|debian)
                    apt update
                    apt install -y dialog
                    ;;
                centos|rhel|fedora)
                    yum install -y dialog
                    ;;
                *)
                    error "Неизвестная ОС. Установите dialog вручную."
                    exit 1
                    ;;
            esac
        else
            error "Не удалось определить ОС. Установите dialog вручную."
            exit 1
        fi
    fi
}

# Главное меню с использованием dialog
main_menu() {
    while true; do
        choice=$(dialog --clear --backtitle "Главное меню" \
            --title "Сетевые настройки" \
            --menu "Выберите действие:" 15 50 8 \
            1 "Настройка статического IP" \
            2 "Изменение имени хоста" \
            3 "Проверка соединений" \
            4 "Создание/удаление пользователей" \
            5 "Выход" \
            2>&1 >/dev/tty)

        case $choice in
            1) configure_static_ip ;;
            2) change_hostname_menu ;;
            3) check_connections ;;
            4) user_management_menu ;;
            5) break ;;
            *) warn "Неверный выбор. Возвращаемся в главное меню." ;;
        esac
    done
}

# Меню изменения имени хоста
change_hostname_menu() {
    while true; do
        local hostnames=("isp.au-team.irpo" "hq-rtr.au-team.irpo" "br-rtr.au-team.irpo" "hq-srv.au-team.irpo" "hq-cli.au-team.irpo" "br-srv.au-team.irpo")
        options=()
        for i in "${!hostnames[@]}"; do
            options+=($((i+1)) "${hostnames[$i]}")
        done
        options+=($((${#hostnames[@]}+1)) "Ввести своё имя")
        options+=($((${#hostnames[@]}+2)) "Вернуться в главное меню")

        choice=$(dialog --clear --backtitle "Изменение имени хоста" \
            --title "Выбор имени хоста" \
            --menu "Выберите вариант:" 15 50 8 "${options[@]}" \
            2>&1 >/dev/tty)

        if [[ "$choice" -eq $((${#hostnames[@]}+2)) ]]; then
            break
        elif [[ "$choice" -le ${#hostnames[@]} ]]; then
            new_hostname=${hostnames[$((choice-1))]}
        else
            new_hostname=$(dialog --inputbox "Введите новое имя хоста:" 8 50 2>&1 >/dev/tty)
        fi

        if [[ -n "$new_hostname" ]]; then
            log "Установка нового имени хоста: $new_hostname"
            hostnamectl set-hostname "$new_hostname"
            exec bash
            log "Имя хоста изменено!"
        fi
    done
}

# Меню управления пользователями
user_management_menu() {
    while true; do
        choice=$(dialog --clear --backtitle "Управление пользователями" \
            --title "Создание/удаление пользователей" \
            --menu "Выберите действие:" 15 50 8 \
            1 "Создать нового пользователя" \
            2 "Удалить существующего пользователя" \
            3 "Просмотреть список пользователей" \
            4 "Вернуться в главное меню" \
            2>&1 >/dev/tty)

        case $choice in
            1)
                username=$(dialog --inputbox "Введите имя нового пользователя:" 8 50 2>&1 >/dev/tty)
                if id "$username" &>/dev/null; then
                    dialog --msgbox "Пользователь '$username' уже существует." 8 50
                else
                    useradd -m -s /bin/bash "$username"
                    passwd "$username"
                    dialog --msgbox "Пользователь '$username' успешно создан!" 8 50
                fi
                ;;
            2)
                username=$(dialog --inputbox "Введите имя пользователя для удаления:" 8 50 2>&1 >/dev/tty)
                if id "$username" &>/dev/null; then
                    userdel -r "$username"
                    dialog --msgbox "Пользователь '$username' успешно удален!" 8 50
                else
                    dialog --msgbox "Пользователь '$username' не существует." 8 50
                fi
                ;;
            3)
                users_list=$(cut -d: -f1 /etc/passwd | column)
                dialog --msgbox "Список пользователей:\n$users_list" 20 50
                ;;
            4) break ;;
            *) warn "Неверный выбор. Возвращаемся в главное меню." ;;
        esac
    done
}

# Проверка соединений
check_connections() {
    dialog --infobox "Проверка сетевых соединений..." 5 50
    sleep 2

    ip_output=$(ip -c a 2>&1)
    ss_output=$(ss -tuln 2>&1)
    nmap_output=""

    if ! command -v nmap &>/dev/null; then
        log "Установка nmap..."
        if [[ -f /etc/os-release ]]; then
            . /etc/os-release
            case "$ID" in
                ubuntu|debian)
                    apt update
                    apt install -y nmap
                    ;;
                centos|rhel|fedora)
                    yum install -y nmap
                    ;;
            esac
        fi
    fi
    nmap_output=$(nmap -sn 192.168.1.0/24 2>&1)

    dialog --msgbox "Результаты проверки:\n\nIP адреса:\n$ip_output\n\nОткрытые порты:\n$ss_output\n\nСканирование сети:\n$nmap_output" 30 80
}

# Запуск скрипта
check_root
install_dialog
main_menu
