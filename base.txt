#!/bin/bash

# Цвета для вывода
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# Функции для логирования
log() {
    echo -e "${CYAN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}
error() {
    echo -e "${RED}[ERROR] $1${NC}"
}
warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}
info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}
prompt() {
    echo -e "${YELLOW}[INPUT] $1${NC}"
}

# Проверка прав root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "Этот скрипт должен быть запущен с правами root"
        exit 1
    fi
}

# Получение списка интерфейсов
get_interfaces() {
    interfaces=($(ip link show | awk -F: '$0 !~ "lo|vir|wl|^[^0-9]"{print $2}' | sed 's/^ *//'))
    if [[ ${#interfaces[@]} -eq 0 ]]; then
        error "Не найдено сетевых интерфейсов"
        exit 1
    fi
}

# Вспомогательная функция: получить маску из CIDR
cidr_to_mask() {
    local cidr=$1
    local mask=""
    for i in {0..3}; do
        local bit=$(( 8 - ((cidr - 1) % 8) ))
        if [[ $i == $(($cidr / 8)) ]]; then
            mask+=$(printf "%d" "$((0xFF << (8 - $bit)))")
        else
            mask+="255"
        fi
        if [[ $i != 3 ]]; then
            mask+="."
        fi
    done
    echo "$mask"
}

# Меню: настройка DHCP
configure_dhcp() {
    get_interfaces
    echo ""
    info "Доступные сетевые интерфейсы:"
    for i in "${!interfaces[@]}"; do
        echo "  $((i+1))) ${interfaces[$i]}"
    done

    while true; do
        prompt "Выберите интерфейс для настройки DHCP (1-${#interfaces[@]}): "
        read -r choice
        if [[ "$choice" =~ ^[0-9]+$ ]] && [[ "$choice" -ge 1 ]] && [[ "$choice" -le ${#interfaces[@]} ]]; then
            interface=${interfaces[$((choice-1))]}
            break
        else
            error "Неверный выбор. Введите число от 1 до ${#interfaces[@]}"
        fi
    done

    # Запрос параметров
    prompt "Введите IP подсети (например, 192.168.1.0/24): "
    read -r subnet_ip

    prompt "Введите начало диапазона IP (например, 192.168.1.100): "
    read -r start_ip

    prompt "Введите конец диапазона IP (например, 192.168.1.200): "
    read -r end_ip

    prompt "Введите шлюз по умолчанию (например, 192.168.1.1): "
    read -r gateway

    prompt "Введите DNS сервер (например, 8.8.8.8): "
    read -r dns_server

    log "Настройка DHCP-сервера на интерфейсе $interface..."

    cat > /etc/systemd/network/10-dhcp-$interface.network << EOF
[Match]
Name=$interface

[Network]
Address=$subnet_ip
Gateway=$gateway
DNS=$dns_server

[DHCPServer]
PoolOffset=$start_ip
PoolSize=$((end_ip - start_ip))
EOF

    systemctl enable systemd-networkd
    systemctl restart systemd-networkd

    log "DHCP-сервер настроен!"
}

# Меню: удалить DHCP
remove_dhcp() {
    if [[ ! -f /etc/systemd/network/10-dhcp-* ]]; then
        warn "Файлы конфигурации DHCP не найдены."
        return
    fi

    log "Удаление DHCP-конфигурации..."
    rm -f /etc/systemd/network/10-dhcp-*
    systemctl stop systemd-networkd
    systemctl disable systemd-networkd

    log "DHCP-сервер удален!"
}

# Главное меню
main_menu() {
    while true; do
        echo ""
        info "Меню управления DHCP"
        echo "1) Настроить DHCP на устройстве"
        echo "2) Удалить DHCP на устройстве"
        echo "3) Выход"
        prompt "Выберите действие (1-3): "
        read -r choice

        case $choice in
            1) configure_dhcp ;;
            2) remove_dhcp ;;
            3) break ;;
            *) warn "Неверный выбор. Введите число от 1 до 3." ;;
        esac
    done
}

# Запуск скрипта
check_root
main_menu
