#!/bin/bash

# Цвета
R='\033[0;31m'; G='\033[0;32m'; Y='\033[1;33m'; B='\033[0;34m'; C='\033[0;36m'; NC='\033[0m'

# Логирование
log() { echo -e "${G}[INFO] $1${NC}"; }
err() { echo -e "${R}[ERROR] $1${NC}"; exit 1; }
warn() { echo -e "${Y}[WARN] $1${NC}"; }
info() { echo -e "${C}[SETUP] $1${NC}"; }

# Проверка root
[[ $EUID -ne 0 ]] && err "Запустите с правами root"

# Получение интерфейсов
get_interfaces() {
    interfaces=($(ip link show | awk -F: '$0 !~ "lo|vir|wl|^[^0-9]"{print $2}' | sed 's/^ *//'))
    [[ ${#interfaces[@]} -eq 0 ]] && err "Интерфейсы не найдены"
}

# Настройка DHCP
setup_dhcp() {
    info "Настройка DHCP сервера..."
    
    # Установка пакета
    log "Установка isc-dhcp-server..."
    apt update >/dev/null 2>&1
    DEBIAN_FRONTEND=noninteractive apt install -y isc-dhcp-server >/dev/null 2>&1
    
    # Выбор интерфейса
    get_interfaces
    echo -e "\n${B}Выберите интерфейс для DHCP:${NC}"
    for i in "${!interfaces[@]}"; do
        echo "  $((i+1))) ${interfaces[$i]}"
    done
    
    while true; do
        read -p "Выбор интерфейса: " choice
        [[ "$choice" =~ ^[0-9]+$ ]] && [[ "$choice" -ge 1 ]] && [[ "$choice" -le ${#interfaces[@]} ]] && break
        warn "Неверный выбор"
    done
    iface=${interfaces[$((choice-1))]}
    
    # Параметры DHCP
    read -p "Сеть (например 192.168.1.0): " network
    read -p "Маска подсети (например 255.255.255.0): " netmask
    read -p "Начальный IP диапазона: " range_start
    read -p "Конечный IP диапазона: " range_end
    read -p "Шлюз по умолчанию: " gateway
    read -p "DNS сервер 1: " dns1
    read -p "DNS сервер 2 (или Enter): " dns2
    read -p "Время аренды (сек, по умолчанию 86400): " lease_time
    lease_time=${lease_time:-86400}
    
    # Создание конфигурации
    log "Создание конфигурации DHCP..."
    cat > /etc/dhcp/dhcpd.conf << EOF
# DHCP конфигурация
default-lease-time $lease_time;
max-lease-time $((lease_time * 2));
authoritative;

subnet $network netmask $netmask {
    range $range_start $range_end;
    option routers $gateway;
    option domain-name-servers $dns1${dns2:+, $dns2};
    option broadcast-address $(ipcalc -b $network/$netmask | cut -d= -f2);
}
EOF
    
    # Настройка интерфейса
    echo "INTERFACESv4=\"$iface\"" > /etc/default/isc-dhcp-server
    echo "INTERFACESv6=\"\"" >> /etc/default/isc-dhcp-server
    
    # Запуск сервиса
    systemctl enable isc-dhcp-server >/dev/null 2>&1
    systemctl restart isc-dhcp-server
    
    if systemctl is-active --quiet isc-dhcp-server; then
        log "DHCP сервер успешно настроен на интерфейсе $iface"
        log "Диапазон: $range_start - $range_end"
    else
        err "Ошибка запуска DHCP сервера. Проверьте настройки."
    fi
}

# Удаление DHCP
remove_dhcp() {
    info "Удаление DHCP сервера..."
    
    # Остановка сервиса
    systemctl stop isc-dhcp-server 2>/dev/null
    systemctl disable isc-dhcp-server 2>/dev/null
    
    # Удаление пакета и конфигов
    DEBIAN_FRONTEND=noninteractive apt remove --purge -y isc-dhcp-server >/dev/null 2>&1
    rm -f /etc/dhcp/dhcpd.conf
    rm -f /etc/default/isc-dhcp-server
    rm -rf /var/lib/dhcp/*
    
    log "DHCP сервер полностью удален"
}

# Настройка DNS
setup_dns() {
    info "Настройка DNS сервера..."
    
    # Установка пакета
    log "Установка bind9..."
    apt update >/dev/null 2>&1
    DEBIAN_FRONTEND=noninteractive apt install -y bind9 bind9utils bind9-doc >/dev/null 2>&1
    
    # Параметры DNS
    read -p "Доменное имя (например example.com): " domain
    read -p "IP сервера DNS: " dns_ip
    read -p "Сеть для обратной зоны (например 192.168.1): " reverse_net
    read -p "Форвардер DNS 1 (например 8.8.8.8): " forwarder1
    read -p "Форвардер DNS 2 (или Enter): " forwarder2
    
    # Создание основной конфигурации
    log "Создание конфигурации DNS..."
    
    # named.conf.options
    cat > /etc/bind/named.conf.options << EOF
options {
    directory "/var/cache/bind";
    
    forwarders {
        $forwarder1;
        ${forwarder2:+$forwarder2;}
    };
    
    dnssec-validation auto;
    listen-on-v6 { any; };
    listen-on { any; };
    allow-query { any; };
    recursion yes;
};
EOF
    
    # named.conf.local
    cat > /etc/bind/named.conf.local << EOF
zone "$domain" {
    type master;
    file "/etc/bind/db.$domain";
};

zone "$reverse_net.in-addr.arpa" {
    type master;
    file "/etc/bind/db.$(echo $reverse_net | tr '.' '_')";
};
EOF
    
    # Прямая зона
    cat > /etc/bind/db.$domain << EOF
\$TTL    604800
@       IN      SOA     ns1.$domain. admin.$domain. (
                        $(date +%Y%m%d)01         ; Serial
                        604800         ; Refresh
                        86400          ; Retry
                        2419200        ; Expire
                        604800 )       ; Negative Cache TTL

@       IN      NS      ns1.$domain.
ns1     IN      A       $dns_ip
www     IN      A       $dns_ip
@       IN      A       $dns_ip
EOF
    
    # Обратная зона
    reverse_octet=$(echo $dns_ip | cut -d. -f4)
    cat > /etc/bind/db.$(echo $reverse_net | tr '.' '_') << EOF
\$TTL    604800
@       IN      SOA     ns1.$domain. admin.$domain. (
                        $(date +%Y%m%d)01         ; Serial
                        604800         ; Refresh
                        86400          ; Retry
                        2419200        ; Expire
                        604800 )       ; Negative Cache TTL

@       IN      NS      ns1.$domain.
$reverse_octet     IN      PTR     ns1.$domain.
EOF
    
    # Права доступа
    chown bind:bind /etc/bind/db.*
    chmod 644 /etc/bind/db.*
    
    # Проверка конфигурации
    if named-checkconf; then
        log "Конфигурация DNS корректна"
    else
        warn "Есть ошибки в конфигурации DNS"
    fi
    
    # Запуск сервиса
    systemctl enable bind9 >/dev/null 2>&1
    systemctl restart bind9
    
    if systemctl is-active --quiet bind9; then
        log "DNS сервер успешно настроен для домена: $domain"
        log "IP сервера: $dns_ip"
    else
        err "Ошибка запуска DNS сервера. Проверьте настройки."
    fi
}

# Удаление DNS
remove_dns() {
    info "Удаление DNS сервера..."
    
    # Остановка сервиса
    systemctl stop bind9 2>/dev/null
    systemctl disable bind9 2>/dev/null
    
    # Удаление пакета и конфигов
    DEBIAN_FRONTEND=noninteractive apt remove --purge -y bind9 bind9utils bind9-doc >/dev/null 2>&1
    rm -f /etc/bind/named.conf.local
    rm -f /etc/bind/named.conf.options
    rm -f /etc/bind/db.*
    rm -rf /var/cache/bind/*
    rm -rf /var/lib/bind/*
    
    log "DNS сервер полностью удален"
}

# Проверка статуса
check_status() {
    echo -e "\n${B}=== СТАТУС СЕРВИСОВ ===${NC}"
    
    # DHCP статус
    if systemctl is-active --quiet isc-dhcp-server 2>/dev/null; then
        echo -e "${G}✓ DHCP сервер: АКТИВЕН${NC}"
        if [[ -f /etc/dhcp/dhcpd.conf ]]; then
            echo "  Конфигурация: /etc/dhcp/dhcpd.conf"
            grep -E "range|option routers" /etc/dhcp/dhcpd.conf | sed 's/^/  /'
        fi
    else
        echo -e "${R}✗ DHCP сервер: НЕАКТИВЕН${NC}"
    fi
    
    echo ""
    
    # DNS статус
    if systemctl is-active --quiet bind9 2>/dev/null; then
        echo -e "${G}✓ DNS сервер: АКТИВЕН${NC}"
        if [[ -f /etc/bind/named.conf.local ]]; then
            echo "  Зоны:"
            grep -E "zone" /etc/bind/named.conf.local | sed 's/^/  /'
        fi
    else
        echo -e "${R}✗ DNS сервер: НЕАКТИВЕН${NC}"
    fi
    
    echo ""
    echo -e "${B}Порты:${NC}"
    ss -tuln | grep -E ":53|:67" | sed 's/^/  /' || echo "  Нет активных портов DHCP/DNS"
}

# Главное меню
while true; do
    echo -e "\n${G}=== НАСТРОЙКА DHCP И DNS ===${NC}"
    echo "1) Настроить DHCP на устройстве"
    echo "2) Удалить DHCP с устройства"
    echo "3) Настроить DNS на устройстве"
    echo "4) Удалить DNS с устройства"
    echo "5) Проверить статус сервисов"
    echo "6) Выход"
    
    read -p "Выбор: " choice
    
    case $choice in
        1) setup_dhcp ;;
        2) remove_dhcp ;;
        3) setup_dns ;;
        4) remove_dns ;;
        5) check_status ;;
        6) log "Выход из настройки"; break ;;
        *) warn "Неверный выбор (1-6)" ;;
    esac
done